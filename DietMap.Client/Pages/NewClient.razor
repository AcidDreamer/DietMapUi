@page "/newclient"
@inject HttpClient Http
@using DietMap.Client.BindingModels
@using System.Text
@using System.Net
@using Client.FormModels
@using DietMap.Client.Enumerations
@inject NavigationManager NavigationManager
@inject IMatToaster Toaster

<EditForm Model="@newClient" OnValidSubmit=NewClientRequest class="newClientForm">
    <h1>New Client</h1>
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <div class="newClientWrapper">
            <MatTextField class="newClientText" @bind-Value=newClient.FullName Label="Name"></MatTextField>

        </div>
    </div>
    <div>
        <div class="newClientWrapper newClientGender">
            <MatRadioGroup @bind-Value=newClient.Gender TValue="Gender" Items="@(Enum.GetValues(typeof(Gender)).Cast<Gender>())"/>
        </div>
    </div>
    <div>
        <div class="newClientWrapper">
            <MatDatePicker class="newClientDate" @bind-Value=newClient.BirthDate TextArea=false Format="yyyy/MM/dd" Label="Birth Date"></MatDatePicker>
        </div>
    </div>

    <div>
        <div class="newClientWrapper">
            <MatTextField class="newClientText" @bind-Value=newClient.Phone Label="Phone"></MatTextField>
        </div>
    </div>
    <div>
        <div class="newClientWrapper">
            <MatTextField class="newClientText" @bind-Value=newClient.Email Label="Email"></MatTextField>
        </div>
    </div>
    <div>
        <div class="newClientWrapper">
            <MatButton class="submitMeasurement" Raised="true" >Submit</MatButton>
        </div>
    </div>
</EditForm>

@code {
    public NewClientModel newClient {get;set;} = new NewClientModel();
    protected override void OnInitialized()
    {
    }
    async Task NewClientRequest()
    {
        newClient.TrimName();
        var stringPayload =  JsonConvert.SerializeObject(newClient);
        var httpContent = new StringContent(stringPayload, Encoding.UTF8, "application/json");
        var result = await Http.PostAsync("https://us-central1-dietmap-c519e.cloudfunctions.net/clientsApi/client",httpContent);
        if (result.StatusCode == HttpStatusCode.OK || result.StatusCode == HttpStatusCode.Created)
        {
            Toaster.Add($"Client {newClient.FullName} added successfully", MatToastType.Success,"Success","", config =>{});
            NavigationManager.NavigateTo("clientlist");
        }
    }
}
<style>
.newClientText{
    margin-top: 10px;
    margin-bottom: 10px;
    box-shadow: 4px 4px 0px #4B0082;
}
.newClientDate{
    margin-top: 10px;
    margin-bottom: 10px;
    box-shadow: 4px 4px 0px #4B0082;
}
.newClientGender{
    border: 4px #4B0082;
    border-style: solid;
    padding: 10px;
    box-shadow: 4px 4px 0px #4B0082;
}


.newClientWrapper{
    margin-top: 5px;
    margin-bottom: 5px;
    display: inline-block;
    text-align: left;
}
.newClientForm{
    text-align: center;
}
</style>